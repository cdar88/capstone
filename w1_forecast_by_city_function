library(zoo)

# Get forecast data for a given city list
get_weather_forecaset_by_cities <- function(city_names){
    df <- data.frame()
    for (city_name in city_names){
        # Forecast API URL
        forecast_url <- 'https://api.openweathermap.org/data/2.5/forecast'
        # Create query parameters
        forecast_query <- list(q = city_name, appid = "e5fa8e1922b35e1fd8f75260beff85b9", units="metric")
        # Make HTTP GET call for the given city
        response <- GET(forecast_url, query=forecast_query)
        # Note that the 5-day forecast JSON result is a list of lists. You can print the reponse to check the results
        json_list <- content(response, as = 'parsed')
        results <- json_list$list
        print(response)
        
        # Loop the json result
        for(result in results) {
            city <- c(city, city_name)
            
        }
        
        # Add the R Lists into a data frame
        weather <- c(weather, result$weather[[1]]$main)
        visibility <- c(visibility, result$visibility)
        temp <- c(temp, result$main$temp)
        temp_min <- c(temp_min, result$main$temp_min)
        temp_max <- c(temp_max, result$main$temp_max)
        pressure <- c(pressure, result$main$pressure)
        humidity <- c(humidity, result$main$humidity)
        wind_speed <- c(wind_speed, result$wind$speed)
        wind_deg <- c(wind_deg, result$wind$deg)
        forecast_datetime <- c(forecast_datetime, result$dt_text)
        
        # Note that for season, you can hard code a season value from levels Spring, Summer, Autumn, and Winter based on your current month.
        months <- as.numeric(format(as.Date(forecast_datetime), '%m'))
        index <- setNames( rep(c('winter', 'spring', 'summer','fall'),each=3), c(12,1:11))
        
        # Season column
        season <- unname(index[as.character(months)])
        
        whtr_df <- data.frame(city=city,
                             weather = weather,
                             visibility=visibility,
                             temp=temp,
                             temp_min=temp_min,
                             temp_max=temp_max,
                             pressure=pressure,
                             humidity=humidity,
                             wind_speed=wind_speed,
                             wind_deg=wind_deg,
                             forecast_datetime=forecast_datetime,
                             season=season
                            )
    }
    
    # Return a data frame
    return(df)
    
}
